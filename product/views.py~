from django.shortcuts import render_to_response,get_object_or_404

from .models import Products
from django.shortcuts import redirect
from .forms import ProductForm
from django.contrib.auth.models import User
from django.views.generic import ListView,DetailView,UpdateView,CreateView, View
from django.core.urlresolvers import reverse_lazy
from django.http import HttpResponseRedirect
from django.contrib.auth.decorators import login_required



class Product_list(ListView):
    template_name="product/product_list.html"
    context_object_name="product"
    def get_queryset(self):
        return Products.objects.filter(user = self.request.user)


class Product_detail(DetailView):
    model=Products
    template_name="product/product_detalis.html"
    context_object_name="product"

class Product_edit(UpdateView):
    template_name="product/product_edit.html"
    model=Products
    fields=['pname','photo','description']
    success_url=reverse_lazy("product:product_list")


class Product_save(CreateView):
    model = Products
    template_name="product/product_save.html"
    fields=['pname','photo','description']
    success_url=reverse_lazy("product:product_list")
    def form_valid(self, form):
        user = self.request.user
        print(self.request.user)
        form.instance.user = user
        return super(Product_save, self).form_valid(form)

    # model=Products
    # fields=['user','pname','photo','description']
    # success_url=reverse_lazy("product:product_list")



class Logout(View):
    def get(self,request):
        logout(request)
        return HttpResponseRedirect(seetings.LOGIN_URL)






# Create your views here.

# class Product_home(TemplateView):

#     def get(self,request):
#          product=Products.objects.all()
#          return render(request,'product/product_list.html',{'product':product})

# class Product_edit(TemplateView):

#     def get(self,request, pk):
#         product=Products.objects.get(pk=pk)
#         return render(request,'product/product_detalis.html',{'product':product})


# class Product_save(TemplateView):
#      def post(self,request):
#     #     form = ProductForm(request.POST,request.FILES)
#     #     if form.is_valid():
#     #         form.save()
#     #         product=Products.objects.all()
#     #         return redirect('product_list',{'product':product})
#     #     else:
#     #        form = ProductForm()
#     #     return render(request, 'product/product_save.html', {'form': form})



# class Product_editF(TemplateView):

#      def get(self,request,pk):
#     #     product=get_object_or_404(Products,pk=pk)
#     #     form=ProductForm(request.POST,request.FILES,instance=product)
#     #     if form.is_valid():
#     #         product=form.save()
#     #         product.save()
#     #         return redirect('product_detail',pk=product.pk)
#     #     form=ProductForm(instance=product)
#     #     return render(request,'product/product_edit.html',{'form':form})
